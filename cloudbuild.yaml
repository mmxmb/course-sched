# [START cloudbuild]
steps:
# This step runs the unit tests on the app
#- name: 'python:3.7-slim'
  #id: Test
  #entrypoint: /bin/sh
  #args:
  #- -c
  #- 'pip install flask && python test_app.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/course-sched:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/course-sched:$SHORT_SHA'

# Connect to GCE server and pull new image
- name: 'gcr.io/cloud-builders/gcloud'
  args: 
  - 'compute'
  - 'ssh', 
  - '$_SERVER' 
  - '--zone'
  - '$_ZONE'
  - '--command'
  - 'gcloud docker -- pull gcr.io/$PROJECT_ID/course-sched:$SHORT_SHA'

# Connect to server and stop current container
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'compute'
  - 'ssh', 
  - '$_SERVER' 
  - '--zone'
  - '$_ZONE'
  - '--command'
  - 'docker stop course-sched'

# Connect to server and remove current container
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'compute'
  - 'ssh', 
  - '$_SERVER' 
  - '--zone'
  - '$_ZONE'
  - '--command'
  - 'docker rm course-sched'

  # Connect to server and start new container
- name: 'gcr.io/cloud-builders/gcloud'
  args: 
  - 'compute'
  - 'ssh'
  - '$_SERVER'
  - '--zone'
  - '$_ZONE'
  - '--command'
  - 'docker run  --restart always --name course-sched -d -p 443:443  --log-driver=gcplogs  gcr.io/$PROJECT_ID/course-sched:$SHORT_SHA'

substitutions:
  _SERVER: 'course-sched-vm'
  _ZONE: 'northamerica-northeast1-a'
# [END cloudbuild]
